<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szmsd.inventory.mapper.PurchaseMapper">
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.szmsd.inventory.domain.Purchase">
        <id column="id" property="id"/>
        <result column="create_by_name" property="createByName"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by_name" property="updateByName"/>
        <result column="update_time" property="updateTime"/>
        <result column="remark" property="remark"/>
        <result column="assert_id" property="assertId"/>
        <result column="create_by" property="createBy"/>
        <result column="update_by" property="updateBy"/>
        <result column="version" property="version"/>
        <result column="del_flag" property="delFlag"/>
        <result column="seller_code" property="sellerCode"/>
        <result column="new_sku" property="newSku"/>
        <result column="custom_code" property="customCode"/>
        <result column="purchase_no" property="purchaseNo"/>
        <result column="available_inventory" property="availableInventory"/>
        <result column="purchase_quantity" property="purchaseQuantity"/>
        <result column="quantity_in_storage_created" property="quantityInStorageCreated"/>
        <result column="arrival_quantity" property="arrivalQuantity"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        create_by_name,
                create_time,
                update_by_name,
                update_time,
                remark,
                product_name,
            id, assert_id, create_by, update_by, version, del_flag, seller_code, new_sku, custom_code, purchase_no, available_inventory, purchase_quantity, quantity_in_storage_created, arrival_quantity
    </sql>

    <select id="selectPurchaseList" resultType="com.szmsd.inventory.domain.vo.PurchaseInfoListVO">
        SELECT
        SUM(available_inventory) AS available_inventory,
        SUM(purchase_quantity) AS purchase_quantity,
        SUM(quantity_in_storage_created) AS quantity_in_storage_created,
        SUM(arrival_quantity) AS arrival_quantity,
        custom_code,
        purchase_no,
        create_time,
        id
        FROM `purchase`
        <where>
            <if test="cm.customCodeList != null and cm.customCodeList.size() > 0">
                AND custom_code IN
                <foreach collection="cm.customCodeList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="cm.purchaseNoList != null and cm.purchaseNoList.size() > 0">
                AND purchase_no IN
                <foreach collection="cm.purchaseNoList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="cm.createTimeStart != null and cm.createTimeEnd != null ">
                AND create_time BETWEEN #{cm.createTimeStart} AND #{cm.createTimeEnd}
            </if>
        </where>
        GROUP BY (purchase_no)
        ORDER BY id DESC
    </select>
</mapper>
